# This workflow will release new version of the service

name: Release

# Whenever a Git Tag the SemVer Format, prefixed with 'v' is being pushed
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  NODE_VERSION: 16.x
  DOCKER_REGISTRY: quay.io/innovation-hub-bergisches-rheinland

jobs:
  # Build an Push a docker image
  build-and-push-image:
    name: Build and push Image

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Generate docker tags and labels
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.DOCKER_REGISTRY }}/prox-web-client
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.QUAY_IO_USERNAME }}
          password: ${{ secrets.QUAY_IO_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ./docker/Dockerfile
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # New Helm release
  helm-chart-releaser:
    runs-on: ubuntu-latest

    needs: [build-and-push-image]

    steps:
      - uses: actions/checkout@v2

      - name: Get Tag version Value
        id: tag
        run: |
          echo ::set-output name=version::${GITHUB_REF#refs/tags/v}

      - name: Publish Helm charts
        uses: stefanprodan/helm-gh-pages@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          charts_dir: ./deploy/charts
          app_version: ${{ steps.tag.outputs.version }}
          chart_version: ${{ steps.tag.outputs.version }}
