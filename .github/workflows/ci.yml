name: CI

on:
  # Run on every pull request
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

env:
  NODE_VERSION: 16.x
  DOCKER_REGISTRY: quay.io/innovation-hub-bergisches-rheinland

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.package-properties.outputs.version }}
      name: ${{ steps.package-properties.outputs.name }}

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          key:
            ${{ runner.os }}-build-${{ env.cache-name }}-${{
            hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: |
          npm ci

      - name: Read package.json
        id: package
        run: |
          content=`cat ./package.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=json::$content"

      - name: Extract properties
        id: package-properties
        run: |
          echo "::set-output name=version::${{ fromJson(steps.package.outputs.json).version }}"
          echo "::set-output name=name::${{ fromJson(steps.package.outputs.json).name }}"

      - name: Build Angular Application
        run: npm run build -- --prod

      - name: Store Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist.zip
          retention-days: 2
          path: |
            ./dist

  checkstyle:
    name: Checkstyle

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - run: npm ci

      - run: npm run lint

  # And now build and push the docker image
  release:
    name: Release

    # But not on pull requests, only on pushes to main
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

    runs-on: ubuntu-latest

    needs: [build, checkstyle]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download built artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./dist/
          name: dist.zip

      - name: Install Semantic Release plugins
        run:
          npm install @semantic-release/git
          @codedependant/semantic-release-docker -D

      - name: Release
        env:
          DOCKER_REGISTRY_USER: ${{ secrets.QUAY_IO_USERNAME }}
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.QUAY_IO_PASSWORD }}
        run: npx semantic-release
